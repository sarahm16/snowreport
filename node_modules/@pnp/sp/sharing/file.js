import { __awaiter, __generator } from "tslib";
import { _File } from "../files/types.js";
import { SharingRole, } from "./types.js";
import { emptyGuid } from "../splibconfig.js";
_File.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {
    if (role === void 0) { role = SharingRole.View; }
    if (requireSignin === void 0) { requireSignin = false; }
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.shareWith(loginNames, role, requireSignin, emailData)];
            }
        });
    });
};
_File.prototype.getShareLink = function (kind, expiration) {
    if (expiration === void 0) { expiration = null; }
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.getShareLink(kind, expiration)];
            }
        });
    });
};
_File.prototype.checkSharingPermissions = function (recipients) {
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.checkSharingPermissions(recipients)];
            }
        });
    });
};
// eslint-disable-next-line max-len
_File.prototype.getSharingInformation = function (request, expands) {
    if (request === void 0) { request = null; }
    if (expands === void 0) { expands = []; }
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.getSharingInformation(request, expands)];
            }
        });
    });
};
_File.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {
    if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.getObjectSharingSettings(useSimplifiedRoles)];
            }
        });
    });
};
_File.prototype.unshare = function () {
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.unshare()];
            }
        });
    });
};
_File.prototype.deleteSharingLinkByKind = function (linkKind) {
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.deleteSharingLinkByKind(linkKind)];
            }
        });
    });
};
_File.prototype.unshareLink = function unshareLink(linkKind, shareId) {
    if (shareId === void 0) { shareId = emptyGuid; }
    return __awaiter(this, void 0, void 0, function () {
        var item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.getItem()];
                case 1:
                    item = _a.sent();
                    return [2 /*return*/, item.unshareLink(linkKind, shareId)];
            }
        });
    });
};
//# sourceMappingURL=file.js.map