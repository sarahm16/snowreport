import { __awaiter, __generator } from "tslib";
import { addProp } from "@pnp/odata";
import { _Web, Web } from "../webs/types.js";
import { SiteGroups, SiteGroup } from "./types.js";
import { spPost } from "../operations.js";
import { escapeQueryStrValue } from "../utils/escapeQueryStrValue.js";
import "../security/web.js";
addProp(_Web, "siteGroups", SiteGroups);
addProp(_Web, "associatedOwnerGroup", SiteGroup, "associatedownergroup");
addProp(_Web, "associatedMemberGroup", SiteGroup, "associatedmembergroup");
addProp(_Web, "associatedVisitorGroup", SiteGroup, "associatedvisitorgroup");
_Web.prototype.createDefaultAssociatedGroups = function (groupNameSeed, siteOwner, copyRoleAssignments, clearSubscopes, siteOwner2) {
    if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }
    if (clearSubscopes === void 0) { clearSubscopes = true; }
    return __awaiter(this, void 0, void 0, function () {
        var q;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.breakRoleInheritance(copyRoleAssignments, clearSubscopes)];
                case 1:
                    _a.sent();
                    q = this.clone(Web, "createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)");
                    q.query.set("@u", "'" + escapeQueryStrValue(siteOwner || "") + "'");
                    q.query.set("@v", "'" + escapeQueryStrValue(siteOwner2 || "") + "'");
                    q.query.set("@s", "'" + escapeQueryStrValue(groupNameSeed || "") + "'");
                    return [2 /*return*/, spPost(q)];
            }
        });
    });
};
//# sourceMappingURL=web.js.map